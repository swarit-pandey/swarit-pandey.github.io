<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Systems on Swarit Pandey</title>
        <link>http://localhost:1313/tags/systems/</link>
        <description>Recent content in Systems on Swarit Pandey</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Swarit Pandey</copyright>
        <lastBuildDate>Fri, 23 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/systems/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Memory 101: The Main Memory and OS</title>
        <link>http://localhost:1313/p/memory-101-the-main-memory-and-os/</link>
        <pubDate>Fri, 23 Aug 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/memory-101-the-main-memory-and-os/</guid>
        <description>&lt;h2 id=&#34;but-what-is-memory&#34;&gt;But, what is memory?
&lt;/h2&gt;&lt;p&gt;Well, in the most obvious ways memory stores data and states (states are
eventually represented in some form of data). In context of computing, memory is
the piece of device that is responsible for making sure that we are able to
store some information, there are various factors that come into play like the amount
of information we need to store, how frequently are we going to access the information,
and how fast we need to get the information. The next obvious question is how is this
&amp;ldquo;information&amp;rdquo; accessed? Well it happens as a part of a typical instruction-execution cycle,
and it is out of scope of this write-up.&lt;/p&gt;
&lt;h2 id=&#34;so-what-is-this-blog-about&#34;&gt;So what is this blog about?
&lt;/h2&gt;&lt;p&gt;This is a techinical dive into how a generic OS is desinged to interact with
memory device mainly with the &lt;em&gt;main&lt;/em&gt; memory. We will go through the basic
hardware on which memory relies on, allocation techniques, segmentation and paging,
and an example we will take a look at the ARM architecture.&lt;/p&gt;
&lt;h2 id=&#34;the-hardware&#34;&gt;The Hardware
&lt;/h2&gt;&lt;img src=&#34;mem01.png&#34; alt=&#34;memory levels&#34;&gt;
&lt;p&gt;CPU accesses data from various memory devices, however direct access to data is
limited to registers and the main-memory. Data accessed through registers is the fastest
and only requires a single CPU cycle without stalls to get the data, although transfering
data from main memory to CPU involves buses (buses are &amp;ldquo;wires&amp;rdquo; carrying the data from
memory to CPU), to reduce the time taken to get the data from memory to CPU we place
another memory device commonly known as cache. CPU cannot directly access data present in
disk so for any instruction all the data has to be present in the main memory.&lt;/p&gt;
&lt;h2 id=&#34;processes-and-memory&#34;&gt;Processes and memory
&lt;/h2&gt;&lt;p&gt;For each process to run, it needs to be loaded into the memory from disk (the executable binary),
and then as CPU executes instructions it needs to periodically decode the instructions, certain
instruction refer back to some space in the memory, this space is addressed as
&amp;ldquo;Logical&amp;rdquo; address, this address then gets converted into &amp;ldquo;Physical&amp;rdquo; address by a
special hardware device called the MMU (memory management unit). Kernel ensures that
a process&amp;rsquo;s memory space is protected via different mechanism such as using special
registers (limit and relocation registers).&lt;/p&gt;
&lt;h3 id=&#34;understanding-a-processs-memory-footprint&#34;&gt;Understanding a process&amp;rsquo;s memory footprint
&lt;/h3&gt;&lt;p&gt;Kernel bookeeps the memory usage of all the running process in the userspace, and to understand
this, we can use the &lt;code&gt;pmap&lt;/code&gt; command. Here for example I am going to show a small example
of how we can see the memory mappings for &lt;code&gt;nvim&lt;/code&gt; (neovim).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1758:   /snap/nvim/2823/usr/bin/nvim .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Address           Kbytes     RSS   Dirty Mode  Mapping
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea31f000     612     536       0 r---- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea3b8000    3524    3124       0 r-x-- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea729000    1148     596       0 r---- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea849000     112     112     112 r---- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea865000      84      76      76 rw--- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055ccea87a000     100      80      80 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055cceb8a3000     156     156       4 rw--- nvim
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;000055cceba23000     448     380     380 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8000000    2980     400       0 r---- locale-archive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8424000      16       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8428000      12       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed842b000       4       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed842c000       4       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed842d000     384     312     312 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed848d000      16       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8491000      12       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8494000       4       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8495000       8       8       8 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8497000     160     160       0 r---- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed84bf000    1620    1152       0 r-x-- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8654000     352     176       0 r---- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86ac000       4       0       0 ----- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86ad000      16      16      16 r---- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86b1000       8       8       8 rw--- libc.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86b3000      52      20      20 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86c0000      12      12       0 r---- libgcc_s.so.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86c3000      92      64       0 r-x-- libgcc_s.so.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86da000      16      16       0 r---- libgcc_s.so.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86de000       4       4       4 r---- libgcc_s.so.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86df000       4       4       4 rw--- libgcc_s.so.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86e0000      56      56       0 r---- libm.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed86ee000     496     252       0 r-x-- libm.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed876a000     364       0       0 r---- libm.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87c5000       4       4       4 r---- libm.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87c6000       4       4       4 rw--- libm.so.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87c7000       8       8       8 rw---   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87c9000       8       8       0 r---- ld-linux-x86-64.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87cb000     168     168       0 r-x-- ld-linux-x86-64.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed87f5000      44      40       0 r---- ld-linux-x86-64.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8800000       4       0       0 rw-s-   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8801000       8       8       8 r---- ld-linux-x86-64.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007fbed8803000       8       8       8 rw--- ld-linux-x86-64.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007ffdfae81000     132      40      40 rw---   [ stack ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007ffdfaef1000      16       0       0 r----   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00007ffdfaef5000       8       4       0 r-x--   [ anon ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------- ------- ------- -------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;total kB           13292    8012    1096
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
